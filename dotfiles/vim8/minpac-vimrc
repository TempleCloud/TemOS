packadd minpac
call minpac#init()

call minpac#add('k-takata/minpac', {'type': 'opt'})

call minpac#add('tpope/vim-unimpaired')
call minpac#add('tpope/vim-scriptease', {'type': 'opt'})

"--- git
call minpac#add('tpope/vim-fugitive')

"--- ctags
"# call minpac#add('xolox/vim-misc')
"# call minpac#add('xolox/vim-easytags', {'type': 'start'})

call minpac#add('craigemery/vim-autotag')
call minpac#add('majutsushi/tagbar')
nmap <F4> :TagbarToggle<CR>

"--- ack / ag
call minpac#add('mileszs/ack.vim')
"# let g:ackprg = 'ag --nogroup --nocolor --column'
let g:ackprg = 'ag --vimgrep'

"--- NERDTree
call minpac#add('scrooloose/nerdtree', {'type': 'start'})
nmap <silent> <F3> :NERDTreeToggle<CR>
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree
let g:nerdtree_tabs_open_on_gui__startup=1
let g:nerdtree_tabs_open_on_console_startup=1

"--- ctrp fuzzy match file search
"# call minpac#add('ctrlpvim/ctrlp.vim)'

"--- fzf fuzzy match file search
call minpac#add('junegunn/fzf', {'dir': '~/.fzf', 'do': './install --all'})
"# NB: Installed via git - add to vim runtimepath.
set rtp+=~/.fzf

call minpac#add('vim-airline/vim-airline')
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
call minpac#add('vim-airline/vim-airline-themes')
let g:airline_theme = 'molokai'

"--- colour schemes
call minpac#add('dandorman/vim-colors')
call minpac#add('jnurmine/Zenburn')

"== languages ================================================================

call minpac#add('rust-lang/rust.vim')
call minpac#add('racer-rust/vim-racer')
call minpac#add('fatih/vim-go')

let g:go_version_warning = 0 "Disable error message for Vim 8.0

"== editor configuration ======================================================

filetype plugin indent on

"--- show existing tab with 4 spaces width
set tabstop=4

"--- when indenting with '>', use 4 spaces width
set shiftwidth=4

"--- on pressing tab, insert 4 spaces
set expandtab

"--- allow backspace to delete from any insert session
set backspace=indent,eol,start

"--- paste options
"# nnoremap <F3> :set invpaste paste?<CR>
set pastetoggle=<F2>
"# set showmode


if has("cscope")
   " Look for a 'cscope.out' file starting from the current directory,
   " going up to the root directory.
   let s:dirs = split(getcwd(), "/")
   while s:dirs != []
           let s:path = "/" . join(s:dirs, "/")
           if (filereadable(s:path . "/cscope.out"))
                   execute "cs add " . s:path . "/cscope.out " . s:path . " -v"
                   break
           endif
           let s:dirs = s:dirs[:-2]
   endwhile

   set csto=0  " Use cscope first, then ctags
   set cst     " Only search cscope
   set csverb  " Make cs verbose

   nmap `<C-\>`s :cs find s `<C-R>`=expand("`<cword>`")`<CR>``<CR>`
   nmap `<C-\>`g :cs find g `<C-R>`=expand("`<cword>`")`<CR>``<CR>`
   nmap `<C-\>`c :cs find c `<C-R>`=expand("`<cword>`")`<CR>``<CR>`
   nmap `<C-\>`t :cs find t `<C-R>`=expand("`<cword>`")`<CR>``<CR>`
   nmap `<C-\>`e :cs find e `<C-R>`=expand("`<cword>`")`<CR>``<CR>`
   nmap `<C-\>`f :cs find f `<C-R>`=expand("`<cfile>`")`<CR>``<CR>`
   nmap `<C-\>`i :cs find i ^`<C-R>`=expand("`<cfile>`")`<CR>`$`<CR>`
   nmap `<C-\>`d :cs find d `<C-R>`=expand("`<cword>`")`<CR>``<CR>`
   nmap <F5> :cprev <CR>
   nmap <F6> :cnext <CR>

   " Open a quickfix window for the following queries.
   set cscopequickfix=s-,c-,d-,i-,t-,e-,g-
endif

""== ui Look and feel =========================================================

set number      " line numbering
set t_Co=256    " Force 256 colors
set t_ut=       " improve screen clearing by using the background color

if has('gui_running')
    set background=dark
    colorscheme zenburn
else
    colorscheme molokai
endif

"# let python_highlight_all=1
 
"# syntax on
syntax enable
set enc=utf-8
set term=screen-256color
let $TERM='screen-256color'

"# cross-hairs
set cul           " highlight current line
set cuc           " highlight current column

"# configure vertical split to be (long U+2502) and clear
set fillchars+=vert:â”‚
hi VertSplit ctermbg=NONE guibg=NONE

"# configure powerline fonts for MacVim with default size 12
if has("gui_running")
   let s:uname = system("uname")
   if s:uname == "Darwin\n"
      set guifont=Meslo\ LG\ M\ Regular\ for\ Powerline:h12
   endif
endif

set rtp+=/usr/local/lib/python2.7/dist-packages/powerline/bindings/vim/
" Always show statusline
set laststatus=2

"== pane spliting config =====================================================
  
set splitbelow
set splitright

""== tab config ==============================================================

"--- previous tab
nmap <silent> <F7> :tabp<CR>

"--- next tab
nmap <silent> <F8> :tabn<CR>

""== commands ================================================================

"--- minpac
command! PackUpdate call minpac#update()
command! PackClean call minpac#clean()
