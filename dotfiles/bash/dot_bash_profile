#!/bin/bash

# *** LOAD ********************************************************************

# Load the default .profile
[[ -s "${HOME}/.profile" ]] && source "${HOME}/.profile"


# *** TERMINAL ****************************************************************

# |*| - Terminal Settings
#
# See: http://blog.taylormcgann.com/2012/06/13/customize-your-shell-command-prompt/
#
export PS1="\[\033[0;95m\]\! \[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\n\$> "
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

export EDITOR=vim

# *** TemOS *******************************************************************

if [ "$(hostname)" == "tlangfor-linux" ]; then
    export TEMOS_HOME=${HOME}/Work/temos
    alias apigc="~/virtualenvs/apigc/bin/apigc"
    unset GTK_IM_MODULE
else
    # Currently the default home for temos on most machines.
    export TEMOS_HOME=${HOME}/Work/temos
fi

source ${TEMOS_HOME}/init.sh
export PATH=${PATH}:${TEMOS_HOME}/bin

# *** ALIAS *******************************************************************

# Refresh Terminal
alias refresh='source ~/.bash_profile && clear'

# === OS Specific ==============================================================

# --- OSX ----------------------------------------------------------------------

if [ "$(uname)" == "Darwin" ]; then
    # Show/Hide Files in Finder
    alias showfiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
    alias hidefiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'
fi

# === App Specific ==============================================================

# *** android *****************************************************************

if [ -d "${TEMOS_BIN}/android-studio" ]; then
    export ANDROID_STUDIO_HOME="${TEMOS_BIN}/android-studio"
    export PATH=${PATH}:"${ANDROID_STUDIO_HOME}/bin"
    # Fix error when running android 'sdkmanager'
    # NB: We have to unset this afterwards to make things work... Maybe this needs an Oaacle/J2EE runtime?
    # export JAVA_OPTS='-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee'
    alias sdkmanager="JAVA_OPTS='-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee' sdkmanager"
    alias android-studio="${ANDROID_STUDIO_HOME}/bin/studio.sh &"
fi

if [ -d "${TEMOS_BIN}/android-tools" ]; then
    export ANDROID_TOOLS_HOME="${TEMOS_BIN}/android-tools"
    export PATH=${PATH}:"${ANDROID_TOOLS_HOME}/bin"
fi

# *** aws *********************************************************************

if [ -d "${HOME}/.local/bin" ]; then
    export PATH="$PATH:${HOME}/.local/bin"
fi

# *** dotnet ******************************************************************

export DOTNET_CLI_TELEMETRY_OPTOUT=true

# *** flutter *****************************************************************

if [ -d "${TEMOS_BIN}/flutter/bin" ]; then
    export FLUTTER_HOME="${TEMOS_BIN}/flutter"
    export PATH=${PATH}:"${FLUTTER_HOME}/bin"
    # flutter config --no-analytics
fi

# *** fzf *********************************************************************

[ -d "${HOME}/.fzf" ] && export PATH=${PATH}:"${HOME}/.fzf/bin" 
[ -f ~/.fzf.bash ] && source ~/.fzf.bash


# *** java ********************************************************************

# if [ "$(uname)" == "Linux" ]; then
#     export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
# fi
# [ -d "${JAVA_HOME}" ] && export PATH=${PATH}:${JAVA_HOME}/bin

# /usr/java/jdk-11.0.5
if [ "$(uname)" == "Linux" ]; then
    export JAVA_HOME="/usr/java/jdk-11.0.5"
fi

if [ "$(hostname)" == "occam" ]; then
    alias set-java8="sudo update-java-alternatives -s java-1.8.0-openjdk-amd64 && export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64"
    alias set-java11="sudo update-java-alternatives -s java-1.11.0-openjdk-amd64 && export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" 
    export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
fi



[ -d "${JAVA_HOME}" ] && export PATH=${PATH}:${JAVA_HOME}/bin


# *** golang ******************************************************************

export GOPATH="${HOME}/Work/dev/golang"

if [ "$(uname)" == "Darwin" ]; then
    [ -d "${GOPATH}" ] && export PATH=$PATH:$GOPATH/bin
fi

if [ "$(uname)" == "Linux" ]; then
    # export GOROOT=/usr/local/go
    export PATH=$PATH:/usr/local/go/bin
fi

# *** gcloud ******************************************************************

# if [ -d "${HOME}/temos/bin/google-cloud-sdk/bin" ]; then
#     export PATH=${PATH}:"${HOME}/temos/bin/google-cloud-sdk/bin"
# fi

# *** gpg *********************************************************************

export GPG_TTY=$(tty)

# *** hugo ********************************************************************

if [ "$(uname)" == "Darwin" ]; then
    export HUGO_HOME='/usr/local/Cellar/hugo/0.47.1'
    [ -d "${HUGO_HOME}" ] && export PATH=$PATH:$HUGO_HOME/bin
fi

# *** hvm *********************************************************************

if [ -d "${HOME}/.hvm" ]; then
    export HVM_HOME="$HOME/.hvm"
    alias hvm="${HVM_HOME}/hvm.sh"
fi

# *** kubernetes **************************************************************

# bash-completion package should be installed first.

# TODO: Fix this error when no kubectl is installed.
# /usr/bin/which: no kubectl in (/home/t...

# [ ! -z $(which kubectl) ] && source <(kubectl completion bash)

# *** nvm ********************************************************************

[ -s "$HOME/.nvm" ] && export NVM_DIR="$HOME/.nvm"
# NB: These scripts prepend to PATH. See $HOME/.bashrc 
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"
[ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"

# *** rust **************************************************************

[ -d "$HOME/.cargo/bin" ] && export PATH=$PATH:$HOME/.cargo/bin


# *** kvm/virsh **************************************************************

if [ "$(uname)" == "Linux" ]; then
    alias init-vm="source ${TEMOS_HOME}/environments/kvm-local/vm.sh "
fi

# *** END *********************************************************************


# *** Machine Specific ********************************************************

if [[ `hostname` == "tlangfor-mac" ]]; then
    alias stop-mcafee="sudo /usr/local/McAfee/AntiMalware/VSControl stopoas"
    alias start-mcafee="sudo /usr/local/McAfee/AntiMalware/VSControl startoas"
fi



# NB: These scritpts prepend to PATH. 
#

# The next line updates PATH for the Google Cloud SDK.
# if [ -f "${HOME}/temos/bin/google-cloud-sdk/path.bash.inc" ]; then source "${HOME}/temos/bin/google-cloud-sdk/path.bash.inc"; fi

# The next line enables shell command completion for gcloud.
# if [ -f "${HOME}/temos/bin/google-cloud-sdk/completion.bash.inc" ]; then source "${HOME}/temos/bin/google-cloud-sdk/completion.bash.inc"; fi


export PATH="$HOME/.cargo/bin:$PATH"
